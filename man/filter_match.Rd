% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_match.R
\name{filter_match}
\alias{filter_match}
\title{Subset rows by matching values in shared key columns}
\usage{
filter_match(dframe, match_to, by_col, ..., select = NULL)
}
\arguments{
\item{dframe}{Data frame to be subset and returned. Must contain the key
column named in \code{by_col}.}

\item{match_to}{Data frame with key column values to be matched to. The
only column used is the required key column named in \code{by_col}.}

\item{by_col}{Character scalar, name of the key column.}

\item{...}{Not used, force later arguments to be used by name.}

\item{select}{Character vector of \code{dframe} column names to retain,
default all columns.}
}
\value{
A \code{data.table} with the following properties:
\itemize{
    \item Unique rows with matching values.
    \item All columns or those specified by \code{select}.
    \item Grouping structures are not preserved.
}
}
\description{
Subset rows of one data frame by values of a key column that match values
of a similar key column in a second data frame. Columns are not subset
unless selected in an optional argument.
}
\details{
Two data frames are input. The \code{match_to} data frame is subset to
retain its key column only.  The result is merged with \code{dframe} in an
inner-join, returning the rows of \code{dframe} with values matching the key
values in \code{match_to}.

Column subsetting occurs after the inner join, so the
key column does not have to be included in the vector of column names in
\code{select}. The final operation is to subset for unique rows.
}
\examples{
library("midfielddata")
data(degree)
filter_match(degree,
             match_to = study_programs,
             by_col   = "cip6",
             select   = c("mcid", "institution", "cip6"))





}
\seealso{
Other filter_*: 
\code{\link{filter_search}()}
}
\concept{filter_*}
