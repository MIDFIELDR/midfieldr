% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/race_sex_join.R
\name{race_sex_join}
\alias{race_sex_join}
\title{Join student demographics}
\usage{
race_sex_join(
  data = NULL,
  demographics = NULL,
  ...,
  id = "id",
  race = "race",
  sex = "sex"
)
}
\arguments{
\item{data}{Data frame to which race and sex are to be joined by student IDs}

\item{demographics}{Data frame from which student race and sex are
obtained, default \code{midfieldstudents}}

\item{...}{Not used for values. Forces the subsequent optional arguments
to only be usable by name.}

\item{id}{Column name in quotes of the student ID variable in
\code{data} and  \code{demographics}. Default is "id". Optional argument.}

\item{race}{Column name in quotes of the student race/ethnicity
variable in \code{demographics}. Default is "race". Optional argument.}

\item{sex}{Column name in quotes of the student sex
variable in \code{demographics}. Default is "sex". Optional argument.}
}
\value{
Input data frame is returned with new columns for race and
sex.
}
\description{
Add student race/ethnicity and sex variables to a data frame.
}
\details{
The \code{data} argument is a data frame to which student race/ethnicity
and sex data are to be joined and returned.

Student race/ethnicity and sex information are obtained from the
 \code{demographics} data frame with a default value of
 \code{midfieldstudents} from the midfielddata package. Optionally, any data
 frame having the same structure as \code{midfieldstudents} can be used.

The student ID variables in \code{data} and \code{demographics} must have
the same column name. The values of the ID variable in \code{data} are
assumed to be a subset of the values in \code{demographics}.

If  \code{data} already contains \code{race} and \code{sex} variables, a
join does not take place and \code{data} is returned unaltered.

The default values of the optional arguments are the column names
\code{"id"}, \code{"race"}, and \code{"sex"}.
If using a data frame with different column names, you can rename
your variables to match the defaults or use the optional arguments to
pass your variable name(s) to the function.
}
\seealso{
Other data_carpentry: 
\code{\link{cip6_select}()},
\code{\link{cip_filter}()},
\code{\link{ever_filter}()},
\code{\link{grad_filter}()},
\code{\link{multiway_order}()},
\code{\link{start_filter}()},
\code{\link{term_summarize}()}
}
\concept{data_carpentry}
