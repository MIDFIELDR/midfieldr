% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prep_fye_mice.R
\name{prep_fye_mice}
\alias{prep_fye_mice}
\title{Prepare FYE data for multivariate imputation}
\usage{
prep_fye_mice(
  midfield_student = student,
  midfield_term = term,
  ...,
  fye_codes = NULL
)
}
\arguments{
\item{midfield_student}{Data frame of Student Unit Record (SUR) student 
observations, keyed by student ID. Default is \code{student}. 
Required variables are \code{mcid}, \code{race}, and \code{sex}.}

\item{midfield_term}{Data frame of SUR term observations keyed 
by student ID. Default is \code{term}. Required variables are 
\code{mcid}, \code{institution}, \code{term}, and \code{cip6}.}

\item{...}{Not used, forces later arguments to be used by name.}

\item{fye_codes}{Optional character vector of 6-digit CIP codes to
identify FYE programs, default "140102". Codes must be 6-digit
strings of numbers; regular expressions are prohibited.
Non-engineering codes---those that do not start with
14---are ignored.}
}
\value{
A \code{data.table} conditioned for later use as an input to the 
mice R package for multiple imputation. The data have the following 
properties:
\itemize{
 \item One row for every FYE student.  
 \item Grouping structures are not preserved.
 \item  Columns returned: 
 \describe{
   \item{\code{mcid}}{Character, anonymized student identifier. Returned 
           as-is.}
   \item{\code{race}}{Factor, race/ethnicity as self-reported by the 
           student. An imputation predictor variable.}
   \item{\code{sex}}{Factor, sex as self-reported by the 
           student. An imputation predictor variable.} 
   \item{\code{institution}}{Factor, anonymized institution name. An 
           imputation predictor variable.} 
   \item{\code{cip6}}{Factor, 6-digit CIP code of a student's known, 
           post-FYE engineering program or NA representing missing 
          values to be imputed.}
 }}
}
\description{
Constructs a data frame of Student Unit Records (SURs) of First-Year 
Engineering (FYE) programs and conditions the data for later use as an 
input to the mice R package for multivariate imputation. Sets up three 
variables as predictors (institution, race, and sex) and one variable to 
be predicted (program CIP code) with NA values to be imputed. Requires 
MIDFIELD \code{student} and \code{term} data frames in the environment.
}
\details{
At some US institutions, engineering students are required to complete 
a First-Year Engineering (FYE) program as a prerequisite for admission to 
their chosen engineering major, e.g., Electrical Engineering, Mechanical 
Engineering, etc. For these degree-granting programs, a metric such as 
graduation rate requires a count of “starters” in the major. To avoid 
miscounting starters at FYE institutions, the FYE records require special 
care.

To illustrate the potential for miscounting starters, suppose we wish to 
calculate a graduation rate for Mechanical Engineering (ME). Students 
starting in ME constitute the starting pool and the fraction of the pool 
graduating in ME is the graduation rate. At FYE institutions, an ME program 
would typically define their starting 
pool as the post-FYE cohort entering their program. This may be the best 
information available, but it invariably undercounts starters by failing 
to account for FYE students who do not transition (post-FYE) to a 
degree-granting engineering program. These students may have left the 
institution or switched to another major. In either case, had they not 
been required to enroll in FYE they would have started in a degree-granting 
engineering major---some of them in ME. By not accounting for these students, 
the count of ME starters is artificially low resulting in an ME graduation 
rate that is artificially high. The same is true for every degree-granting 
engineering discipline in an FYE institution.

Therefore, to avoid miscounting starters at FYE institutions, we have to 
predict the 6-digit CIP codes of the degree-granting engineering programs 
that FYE students would have declared had they not been required to enroll 
in FYE. The purpose of \code{prep_fye_mice()} is to prepare the data 
for making that prediction.
}
\section{Method}{
 
The method requires MIDFIELD-style student and term data tables that 
contain at a minimum the institutions being studied that also have FYE 
programs. The function extracts all terms for all FYE students and sorts 
them into two categories:

\enumerate{
\item{Students who complete an FYE and declare an engineering major.
    This is the easy case---at the student's first opportunity, they
    enrolled in an engineering program of their choosing. We use that
    program as the predicted  starting program. This predicted value is 
    assigned by \code{prep_fye_mice()}.}
\item{Students who, after FYE, do not declare an engineering major.
    This is the more complicated case---the data provide no information
    regarding what engineering program the student would have declared
    originally had the institution not required them to enroll in FYE.
    For these students, we treat the starting program as missing data to be
    predicted using multivariate imputation.}
}

In cases where students enter FYE, change programs,
and re-enter FYE, only the first group of FYE terms is considered. Any
programs before FYE are ignored. The first (if any) post-FYE program is
identified. If the program is in engineering, the CIP is retained as
their predicted starting major. If not, the CIP is replaced with NA to
be treated as missing data for the imputation.

Lastly, the predictor variables (institution, race, sex) and the predicted
variable (6-digit CIP code) are converted to unordered factors. 
The resulting data frame is ready for use as input for the mice package.
}

\examples{
# Using toy data
prep_fye_mice(toy_student, toy_term)

# Other columns, if any, are dropped
colnames(toy_student)
colnames(prep_fye_mice(toy_student, toy_term))

# Optional argument permits multiple CIP codes for FYE
prep_fye_mice(midfield_student = toy_student, 
              midfield_term =toy_term, 
              fye_codes = c("140101", "140102"))

}
